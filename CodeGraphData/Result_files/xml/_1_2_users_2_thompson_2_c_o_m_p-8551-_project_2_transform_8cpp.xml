<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="_1_2_users_2_thompson_2_c_o_m_p-8551-_project_2_transform_8cpp" kind="file">
    <compoundname>Transform.cpp</compoundname>
    <includes refid="_1_2_users_2_thompson_2_c_o_m_p-8551-_project_2_transform_8h" local="yes">Transform.h</includes>
    <incdepgraph>
      <node id="1645">
        <label>C:/Users/Thompson/COMP-8551-Project/Transform.cpp</label>
        <link refid=":/Users/Thompson/COMP-8551-Project/Transform.cpp"/>
        <childnode refid="1646" relation="include">
        </childnode>
      </node>
      <node id="1646">
        <label>Transform.h</label>
        <link refid="_1_2_users_2_thompson_2_c_o_m_p-8551-_project_2_transform_8h"/>
        <childnode refid="1647" relation="include">
        </childnode>
        <childnode refid="1648" relation="include">
        </childnode>
        <childnode refid="1649" relation="include">
        </childnode>
      </node>
      <node id="1648">
        <label>glm/gtc/matrix_transform.hpp</label>
      </node>
      <node id="1649">
        <label>Libraries/include/box2d/box2d.h</label>
      </node>
      <node id="1647">
        <label>glm/glm.hpp</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_1_2_users_2_thompson_2_c_o_m_p-8551-_project_2_transform_8h" kindref="compound">Transform.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>public<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"><ref refid="class_transform_1aa08ca4266efabc768973cdeea51945ab" kindref="member">Transform::Transform</ref>()<sp/>:<sp/><ref refid="class_transform" kindref="compound">Transform</ref>(0,<sp/>0,<sp/>0,<sp/>1,<sp/>1)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><ref refid="class_transform_1aa08ca4266efabc768973cdeea51945ab" kindref="member">Transform::Transform</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>xPos=0,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>yPos=0,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rot=0,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>xScale=1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>yScale=1)<sp/>{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_transform_1a2ff696cd1ce8256c182415306a551650" kindref="member">position</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xPos,</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yPos</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_transform_1ab87b58888db840907cfe55b285dfb9d4" kindref="member">rotation</ref><sp/>=<sp/>rot;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_transform_1ae04aa2fb67a9319ec82490343a0d333b" kindref="member">scale</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xScale,</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yScale</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_transform_1a00988e118f0333f74fa911d76c103792" kindref="member">generateModelMatrix</ref>();</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><ref refid="struct_position" kindref="compound">Position</ref><sp/><ref refid="class_transform_1ad40222e6a36f952edfc700a531fe362e" kindref="member">Transform::getPosition</ref>()<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_transform_1a2ff696cd1ce8256c182415306a551650" kindref="member">position</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>most<sp/>commonly<sp/>used<sp/>function<sp/>=&gt;<sp/>will<sp/>optimized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>by<sp/>translating<sp/>the<sp/>modelMatrix<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_transform_1a7e9e7e5291025b63a536aece9cbe2580" kindref="member">Transform::setPosition</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_transform_1a2ff696cd1ce8256c182415306a551650" kindref="member">position</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x,<sp/>y</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_transform_1a04ae2a0a1755eca09dcb05d6d274af37" kindref="member">positionChanged</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_transform_1a99b08e3f6b2f69377ec02d77da6b72f4" kindref="member">Transform::translate</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_transform_1a2ff696cd1ce8256c182415306a551650" kindref="member">position</ref>.<ref refid="struct_position_1af684446cbf0f6d53386686283da6dcc6" kindref="member">x</ref><sp/>+=<sp/>x;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_transform_1a2ff696cd1ce8256c182415306a551650" kindref="member">position</ref>.<ref refid="struct_position_1a54a6182b5f7539295b32255808897d3f" kindref="member">y</ref><sp/>+=<sp/>y;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_transform_1a04ae2a0a1755eca09dcb05d6d274af37" kindref="member">positionChanged</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_transform_1a26bf8712effcf614a9fad90c7a86fe3d" kindref="member">Transform::setPhysicsBody</ref>(b2Body*<sp/>newBody)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_transform_1ad0c781ada85b609f54d6f116eaf80cff" kindref="member">body</ref><sp/>=<sp/>newBody;</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">b2Body*<sp/><ref refid="class_transform_1ad1abbf808054f82fb3cf4877053b0bbb" kindref="member">Transform::getPhysicsBody</ref>()<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_transform_1ad0c781ada85b609f54d6f116eaf80cff" kindref="member">body</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_transform_1a377194ad810fc2e6d05e3008eb8c7655" kindref="member">Transform::update</ref>()<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_transform_1ad0c781ada85b609f54d6f116eaf80cff" kindref="member">body</ref><sp/>&amp;&amp;<sp/><ref refid="class_transform_1ad0c781ada85b609f54d6f116eaf80cff" kindref="member">body</ref>-&gt;GetType()<sp/>!=<sp/>b2_staticBody)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b2Vec2<sp/><ref refid="class_transform_1a2ff696cd1ce8256c182415306a551650" kindref="member">position</ref><sp/>=<sp/><ref refid="class_transform_1ad0c781ada85b609f54d6f116eaf80cff" kindref="member">body</ref>-&gt;GetPosition();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//body-&gt;SetTransform(b2Vec2(position.x,<sp/>position.y),<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//setPosition(position.x,<sp/>position.y);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;In<sp/>transform<sp/>X-Pos:<sp/>%0.2f<sp/>Y-Pos<sp/>%0.2f\n&quot;,<sp/>position.x,<sp/>position.y);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><ref refid="struct_scale" kindref="compound">Scale</ref><sp/><ref refid="class_transform_1aa05dfdf4bff55f8f6e8b632256025126" kindref="member">Transform::getScale</ref>()<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_transform_1ae04aa2fb67a9319ec82490343a0d333b" kindref="member">scale</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_transform_1a95b51a84a2a28fa2982b9351dd5612f7" kindref="member">Transform::setScale</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_transform_1ae04aa2fb67a9319ec82490343a0d333b" kindref="member">scale</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x,<sp/>y</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_transform_1a2911b215b4a5bec5bed3aca287e96ea7" kindref="member">scaleChanged</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><ref refid="_1_2users_2thompson_2comp-8551-project_2_transform_8h_1ac110c6bc4bfdc61c96f11c78236a66e6" kindref="member">Rotation</ref><sp/><ref refid="class_transform_1a900535322e8e1ace4fc0dc0dedc20fc3" kindref="member">Transform::getRotation</ref>()<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_transform_1ab87b58888db840907cfe55b285dfb9d4" kindref="member">rotation</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_transform_1a892933ef3914f573336f3f8089cd0b05" kindref="member">Transform::setRotation</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>r)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_transform_1ab87b58888db840907cfe55b285dfb9d4" kindref="member">rotation</ref><sp/>=<sp/>r;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_transform_1ad5cead73c951df166ca9b006fd1ce094" kindref="member">rotationChanged</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_transform_1a68e0346e43deb8dcfde1cc03656ff190" kindref="member">Transform::rotate</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rDelta)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_transform_1ab87b58888db840907cfe55b285dfb9d4" kindref="member">rotation</ref><sp/>+=<sp/>rDelta;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_transform_1ad5cead73c951df166ca9b006fd1ce094" kindref="member">rotationChanged</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/>create<sp/>a<sp/>new<sp/>model<sp/>matrix<sp/>only<sp/>when<sp/>we<sp/>are<sp/>needed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//<sp/>contains<sp/>optimization<sp/>so<sp/>we<sp/>only<sp/>need<sp/>to<sp/>do<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/>math<sp/>when<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal">glm::mat4<sp/><ref refid="class_transform_1af0671190bf3f3b4e5cdd8ccb23c05a7a" kindref="member">Transform::getModelMatrix</ref>()<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>rotated<sp/>or<sp/>scaled,<sp/>generate<sp/>the<sp/>whole<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>regardless<sp/>whether<sp/>position<sp/>changed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_transform_1ad5cead73c951df166ca9b006fd1ce094" kindref="member">rotationChanged</ref><sp/>||<sp/><ref refid="class_transform_1a2911b215b4a5bec5bed3aca287e96ea7" kindref="member">scaleChanged</ref>)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_transform_1a00988e118f0333f74fa911d76c103792" kindref="member">generateModelMatrix</ref>();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>only<sp/>position<sp/>changed<sp/>(the<sp/>above<sp/>failed)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>just<sp/>translate<sp/>=&gt;<sp/>save<sp/>on<sp/>calculation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_transform_1a04ae2a0a1755eca09dcb05d6d274af37" kindref="member">positionChanged</ref>)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_transform_1a43f71c15ac9818b3af7a57be33256259" kindref="member">translateModelMatrix</ref>();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>change?<sp/>no<sp/>matrix<sp/>calc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>for<sp/>next<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_transform_1a04ae2a0a1755eca09dcb05d6d274af37" kindref="member">positionChanged</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_transform_1ad5cead73c951df166ca9b006fd1ce094" kindref="member">rotationChanged</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_transform_1a2911b215b4a5bec5bed3aca287e96ea7" kindref="member">scaleChanged</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_transform_1a04baa07a15f7c86c9b0355afc33a1da2" kindref="member">modelMatrix</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//<sp/>private</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Generate<sp/>the<sp/>model<sp/>matrix<sp/>based<sp/>on<sp/>the<sp/>current</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">//<sp/>transforms<sp/>at<sp/>the<sp/>time<sp/>of<sp/>call.<sp/>This<sp/>will</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">//<sp/>check<sp/>everything<sp/>(position,<sp/>rotation,<sp/>scale).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>`translateModelMatrix`<sp/>if<sp/>you<sp/>only<sp/>want<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">//<sp/>translate<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_transform_1a00988e118f0333f74fa911d76c103792" kindref="member">Transform::generateModelMatrix</ref>()<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>glm::mat4<sp/>model<sp/>=<sp/>glm::mat4(1);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>proper<sp/>math<sp/>orders<sp/>is<sp/>scale<sp/>first,<sp/>then<sp/>rotate,<sp/>then<sp/>translate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>However,<sp/>matrix<sp/>multiplication<sp/>order<sp/>is<sp/>apply<sp/>right<sp/>to<sp/>left,<sp/>so<sp/>we<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(codewise)<sp/>translating,<sp/>then<sp/>rotating,<sp/>then<sp/>scaling.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>model<sp/>=<sp/>glm::translate(model,<sp/>glm::vec3(<ref refid="class_transform_1a2ff696cd1ce8256c182415306a551650" kindref="member">position</ref>.<ref refid="struct_position_1af684446cbf0f6d53386686283da6dcc6" kindref="member">x</ref>,<sp/><ref refid="class_transform_1a2ff696cd1ce8256c182415306a551650" kindref="member">position</ref>.<ref refid="struct_position_1a54a6182b5f7539295b32255808897d3f" kindref="member">y</ref>,<sp/>0));</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>has<sp/>to<sp/>specify<sp/>a<sp/>rotation<sp/>axis<sp/>=&gt;<sp/>need<sp/>a<sp/>review</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>I<sp/>need<sp/>a<sp/>quaternion?<sp/>do<sp/>I<sp/>need<sp/>to<sp/>shift<sp/>to<sp/>accomodate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>whether<sp/>x<sp/>and<sp/>y<sp/>is<sp/>top<sp/>left<sp/>or<sp/>center?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//model<sp/>=<sp/>glm::rotate(model,<sp/>rotation,<sp/>rotAxis);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>model<sp/>=<sp/>glm::scale(model,<sp/>glm::vec3(<ref refid="class_transform_1ae04aa2fb67a9319ec82490343a0d333b" kindref="member">scale</ref>.<ref refid="struct_scale_1acb61ab9c3570c49d7e6014c4833f7411" kindref="member">x</ref>,<sp/><ref refid="class_transform_1ae04aa2fb67a9319ec82490343a0d333b" kindref="member">scale</ref>.<ref refid="struct_scale_1a076bfbff03b61e3a08704d17e904294d" kindref="member">y</ref>,<sp/>1));</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_transform_1a04baa07a15f7c86c9b0355afc33a1da2" kindref="member">modelMatrix</ref><sp/>=<sp/>model;</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_transform_1a43f71c15ac9818b3af7a57be33256259" kindref="member">Transform::translateModelMatrix</ref>()<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>glm::mat4<sp/>model<sp/>=<sp/>glm::mat4(1);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>model<sp/>=<sp/>glm::translate(model,<sp/>glm::vec3(<ref refid="class_transform_1a2ff696cd1ce8256c182415306a551650" kindref="member">position</ref>.<ref refid="struct_position_1af684446cbf0f6d53386686283da6dcc6" kindref="member">x</ref>,<sp/><ref refid="class_transform_1a2ff696cd1ce8256c182415306a551650" kindref="member">position</ref>.<ref refid="struct_position_1a54a6182b5f7539295b32255808897d3f" kindref="member">y</ref>,<sp/>0));</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_transform_1a04baa07a15f7c86c9b0355afc33a1da2" kindref="member">modelMatrix</ref><sp/>=<sp/>model;</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/Thompson/COMP-8551-Project/Transform.cpp"/>
  </compounddef>
</doxygen>
