<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="_1_2users_2thompson_2comp-8551-project_2_component_manager_8h" kind="file">
    <compoundname>ComponentManager.h</compoundname>
    <includes refid="_1_2users_2thompson_2comp-8551-project_2_types_8h" local="yes">Types.h</includes>
    <includes local="no">any</includes>
    <includes local="no">memory</includes>
    <includes local="no">unordered_map</includes>
    <includedby refid="_1_2users_2thompson_2comp-8551-project_2chunk_8h" local="yes">c:/users/thompson/comp-8551-project/chunk.h</includedby>
    <includedby refid="_1_2users_2thompson_2comp-8551-project_2_component_manager_8cpp" local="yes">c:/users/thompson/comp-8551-project/ComponentManager.cpp</includedby>
    <includedby refid="_1_2users_2thompson_2comp-8551-project_2_entity_coordinator_8h" local="yes">c:/users/thompson/comp-8551-project/EntityCoordinator.h</includedby>
    <includedby refid="_1_2users_2thompson_2comp-8551-project_2_entity_query_8h" local="yes">c:/users/thompson/comp-8551-project/EntityQuery.h</includedby>
    <incdepgraph>
      <node id="753">
        <label>string</label>
      </node>
      <node id="755">
        <label>any</label>
      </node>
      <node id="750">
        <label>Types.h</label>
        <link refid="_1_2users_2thompson_2comp-8551-project_2_types_8h"/>
        <childnode refid="751" relation="include">
        </childnode>
        <childnode refid="752" relation="include">
        </childnode>
        <childnode refid="753" relation="include">
        </childnode>
        <childnode refid="754" relation="include">
        </childnode>
      </node>
      <node id="751">
        <label>bitset</label>
      </node>
      <node id="749">
        <label>c:/users/thompson/comp-8551-project/ComponentManager.h</label>
        <link refid=":/users/thompson/comp-8551-project/ComponentManager.h"/>
        <childnode refid="750" relation="include">
        </childnode>
        <childnode refid="755" relation="include">
        </childnode>
        <childnode refid="756" relation="include">
        </childnode>
        <childnode refid="752" relation="include">
        </childnode>
      </node>
      <node id="754">
        <label>iostream</label>
      </node>
      <node id="752">
        <label>unordered_map</label>
      </node>
      <node id="756">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="772">
        <label>c:/users/thompson/comp-8551-project/EntityQuery.cpp</label>
        <link refid="_1_2users_2thompson_2comp-8551-project_2_entity_query_8cpp"/>
      </node>
      <node id="773">
        <label>c:/users/thompson/comp-8551-project/ComponentManager.cpp</label>
        <link refid="_1_2users_2thompson_2comp-8551-project_2_component_manager_8cpp"/>
      </node>
      <node id="771">
        <label>c:/users/thompson/comp-8551-project/EntityQuery.h</label>
        <link refid="_1_2users_2thompson_2comp-8551-project_2_entity_query_8h"/>
        <childnode refid="762" relation="include">
        </childnode>
        <childnode refid="772" relation="include">
        </childnode>
      </node>
      <node id="761">
        <label>c:/users/thompson/comp-8551-project/chunkManager.cpp</label>
        <link refid="_1_2users_2thompson_2comp-8551-project_2chunk_manager_8cpp"/>
      </node>
      <node id="760">
        <label>c:/users/thompson/comp-8551-project/chunkManager.h</label>
        <link refid="_1_2users_2thompson_2comp-8551-project_2chunk_manager_8h"/>
        <childnode refid="761" relation="include">
        </childnode>
        <childnode refid="762" relation="include">
        </childnode>
        <childnode refid="768" relation="include">
        </childnode>
      </node>
      <node id="762">
        <label>c:/users/thompson/comp-8551-project/EntityCoordinator.h</label>
        <link refid="_1_2users_2thompson_2comp-8551-project_2_entity_coordinator_8h"/>
        <childnode refid="763" relation="include">
        </childnode>
        <childnode refid="766" relation="include">
        </childnode>
        <childnode refid="764" relation="include">
        </childnode>
      </node>
      <node id="758">
        <label>c:/users/thompson/comp-8551-project/chunk.h</label>
        <link refid="_1_2users_2thompson_2comp-8551-project_2chunk_8h"/>
        <childnode refid="759" relation="include">
        </childnode>
        <childnode refid="760" relation="include">
        </childnode>
        <childnode refid="770" relation="include">
        </childnode>
        <childnode refid="771" relation="include">
        </childnode>
      </node>
      <node id="766">
        <label>c:/users/thompson/comp-8551-project/PhysicsWorld.h</label>
        <link refid="_1_2users_2thompson_2comp-8551-project_2_physics_world_8h"/>
        <childnode refid="764" relation="include">
        </childnode>
        <childnode refid="767" relation="include">
        </childnode>
      </node>
      <node id="770">
        <label>c:/users/thompson/comp-8551-project/componentInfo.h</label>
        <link refid="_1_2users_2thompson_2comp-8551-project_2component_info_8h"/>
      </node>
      <node id="765">
        <label>c:/users/thompson/comp-8551-project/Renderer.cpp</label>
        <link refid="_1_2users_2thompson_2comp-8551-project_2_renderer_8cpp"/>
      </node>
      <node id="764">
        <label>c:/users/thompson/comp-8551-project/main.cpp</label>
        <link refid="_1_2users_2thompson_2comp-8551-project_2main_8cpp"/>
      </node>
      <node id="757">
        <label>c:/users/thompson/comp-8551-project/ComponentManager.h</label>
        <link refid=":/users/thompson/comp-8551-project/ComponentManager.h"/>
        <childnode refid="758" relation="include">
        </childnode>
        <childnode refid="773" relation="include">
        </childnode>
        <childnode refid="762" relation="include">
        </childnode>
        <childnode refid="771" relation="include">
        </childnode>
      </node>
      <node id="763">
        <label>c:/users/thompson/comp-8551-project/Renderer.h</label>
        <link refid="_1_2users_2thompson_2comp-8551-project_2_renderer_8h"/>
        <childnode refid="764" relation="include">
        </childnode>
        <childnode refid="765" relation="include">
        </childnode>
      </node>
      <node id="769">
        <label>c:/users/thompson/comp-8551-project/protoChunkManager.cpp</label>
        <link refid="_1_2users_2thompson_2comp-8551-project_2proto_chunk_manager_8cpp"/>
      </node>
      <node id="768">
        <label>c:/users/thompson/comp-8551-project/protoChunkManager.h</label>
        <link refid="_1_2users_2thompson_2comp-8551-project_2proto_chunk_manager_8h"/>
        <childnode refid="769" relation="include">
        </childnode>
      </node>
      <node id="759">
        <label>c:/users/thompson/comp-8551-project/chunk.cpp</label>
        <link refid="_1_2users_2thompson_2comp-8551-project_2chunk_8cpp"/>
      </node>
      <node id="767">
        <label>c:/users/thompson/comp-8551-project/PhysicsWorld.cpp</label>
        <link refid="_1_2users_2thompson_2comp-8551-project_2_physics_world_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_component_manager" prot="public">ComponentManager</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&quot;ComponentArray.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_1_2users_2thompson_2comp-8551-project_2_types_8h" kindref="compound">Types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&quot;componentInfo.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;any&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="class_component_manager" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_component_manager" kindref="compound">ComponentManager</ref></highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14" refid="class_component_manager_1a91a09fe7bcda7e1e724be456b0140941" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_entity_coordinator" kindref="compound">EntityCoordinator</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::unordered_map&lt;const<sp/>char*,<sp/>ComponentType&gt;<sp/>mComponentTypes{};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="class_component_manager_1a5b2edc3869a8feba728ef23e633e7b78" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_1_2users_2thompson_2comp-8551-project_2_types_8h_1ab2ed3bd54087a14ade2e38eb14b29ae6" kindref="member">ComponentSizeMap</ref><sp/><ref refid="class_component_manager_1a5b2edc3869a8feba728ef23e633e7b78" kindref="member">mComponentSizes</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::unordered_map&lt;const<sp/>char*,<sp/>glm::uint&gt;<sp/>mComponentInfo;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::unordered_map&lt;const<sp/>char*,<sp/>std::shared_ptr&lt;IComponentArray&gt;&gt;<sp/>mComponentArrays{};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ComponentType<sp/>mNextComponentType{};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="class_component_manager_1acb2efeb31233e24a523c8dded7deb6b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="_1_2users_2thompson_2comp-8551-project_2_types_8h_1a22da2f2e1a665b27fd146bb514ae3b59" kindref="member">ComponentType</ref><sp/><ref refid="class_component_manager_1acb2efeb31233e24a523c8dded7deb6b8" kindref="member">typeCounter</ref>;</highlight></codeline>
<codeline lineno="23" refid="class_component_manager_1a31725ef76c02978dd1a84539f3c97fa4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_component_manager" kindref="compound">ComponentManager</ref>*<sp/><ref refid="class_component_manager_1a31725ef76c02978dd1a84539f3c97fa4" kindref="member">main</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="28" refid="class_component_manager_1a309d22744c09d34d4672f52ef56124db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_component_manager_1a309d22744c09d34d4672f52ef56124db" kindref="member">RegisterComponent</ref>()</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//const<sp/>char*<sp/>typeName<sp/>=<sp/>typeid(T).name();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_1_2users_2thompson_2comp-8551-project_2_types_8h_1a22da2f2e1a665b27fd146bb514ae3b59" kindref="member">ComponentType</ref><sp/>ct<sp/>=<sp/>NEW_GetComponentType&lt;T&gt;();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="class_component_manager_1a5b2edc3869a8feba728ef23e633e7b78" kindref="member">mComponentSizes</ref>.find(ct)<sp/>==<sp/><ref refid="class_component_manager_1a5b2edc3869a8feba728ef23e633e7b78" kindref="member">mComponentSizes</ref>.end()<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Registering<sp/>component<sp/>type<sp/>more<sp/>than<sp/>once.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_component_manager_1a5b2edc3869a8feba728ef23e633e7b78" kindref="member">mComponentSizes</ref>.emplace(ct,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mComponentTypes.insert({<sp/>typeName,<sp/>mNextComponentType<sp/>});</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mComponentArrays.insert({<sp/>typeName,<sp/>std::make_shared&lt;ComponentArray&lt;T&gt;&gt;()<sp/>});</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Signature<sp/>sig;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ComponentInfo<sp/>info(mNextComponentType);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//++mNextComponentType;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//template&lt;typename<sp/>T&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ComponentType<sp/>GetComponentType()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>const<sp/>char*<sp/>typeName<sp/>=<sp/>typeid(T).name();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>assert(mComponentTypes.find(typeName)<sp/>!=<sp/>mComponentTypes.end()<sp/>&amp;&amp;<sp/>&quot;Component<sp/>not<sp/>registered<sp/>before<sp/>use.&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>mComponentTypes[typeName];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="56" refid="class_component_manager_1a5b5cacdd1f612381068dff8c129834bb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="_1_2users_2thompson_2comp-8551-project_2_types_8h_1a22da2f2e1a665b27fd146bb514ae3b59" kindref="member">ComponentType</ref><sp/><ref refid="class_component_manager_1a5b5cacdd1f612381068dff8c129834bb" kindref="member">NEW_GetComponentType</ref>()</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_1_2users_2thompson_2comp-8551-project_2_types_8h_1a22da2f2e1a665b27fd146bb514ae3b59" kindref="member">ComponentType</ref><sp/>typeID<sp/>=<sp/><ref refid="class_component_manager_1acb2efeb31233e24a523c8dded7deb6b8" kindref="member">typeCounter</ref>++;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>typeID;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="_1_2users_2thompson_2comp-8551-project_2_types_8h_1a53c4ce85e1def45634a3b07af7870bb9" kindref="member">ComponentSize</ref><sp/><ref refid="class_component_manager_1ad6f1de1480afdde24d0c6f5e001c68e2" kindref="member">GetComponentSize</ref>(<ref refid="_1_2users_2thompson_2comp-8551-project_2_types_8h_1a22da2f2e1a665b27fd146bb514ae3b59" kindref="member">ComponentType</ref><sp/>t);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_1_2users_2thompson_2comp-8551-project_2_types_8h_1a53c4ce85e1def45634a3b07af7870bb9" kindref="member">ComponentSize</ref><sp/><ref refid="class_component_manager_1aa0bb21eac8e26b968a733442f5895cd4" kindref="member">getComponentSize</ref>(<ref refid="_1_2users_2thompson_2comp-8551-project_2_types_8h_1a22da2f2e1a665b27fd146bb514ae3b59" kindref="member">ComponentType</ref><sp/>t);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//template&lt;typename<sp/>T&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//void<sp/>AddComponent(Entity<sp/>entity,<sp/>T<sp/>component)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>GetComponentArray&lt;T&gt;()-&gt;InsertData(entity,<sp/>component);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//template&lt;typename<sp/>T&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//void<sp/>RemoveComponent(Entity<sp/>entity)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>GetComponentArray&lt;T&gt;()-&gt;RemoveData(entity);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//template&lt;typename<sp/>T&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//T&amp;<sp/>GetComponent(Entity<sp/>entity)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>GetComponentArray&lt;T&gt;()-&gt;GetData(entity);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//void<sp/>EntityDestroyed(Entity<sp/>entity)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>for<sp/>(auto<sp/>const&amp;<sp/>pair<sp/>:<sp/>mComponentArrays)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>auto<sp/>const&amp;<sp/>component<sp/>=<sp/>pair.second;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>component-&gt;EntityDestroyed(entity);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//template&lt;typename<sp/>T&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//void<sp/>MakeSignature()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//template&lt;typename<sp/>T&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//void<sp/>SetSignatureBit(Signature&amp;<sp/>sig)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>const<sp/>char*<sp/>typeName<sp/>=<sp/>typeid(T).name();<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>auto<sp/>find<sp/>=<sp/>mComponentTypes.find(typeName);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>if<sp/>(find<sp/>==<sp/>mComponentTypes.end())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>this<sp/>component<sp/>does<sp/>not<sp/>exist?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;component<sp/>not<sp/>registered?&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>int<sp/>type<sp/>=<sp/>find-&gt;second;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>sig.set(type,<sp/>true);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//template&lt;typename<sp/>T&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::shared_ptr&lt;ComponentArray&lt;T&gt;&gt;<sp/>GetComponentArray()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>const<sp/>char*<sp/>typeName<sp/>=<sp/>typeid(T).name();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>assert(mComponentTypes.find(typeName)<sp/>!=<sp/>mComponentTypes.end()<sp/>&amp;&amp;<sp/>&quot;Component<sp/>not<sp/>registered<sp/>before<sp/>use.&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>std::static_pointer_cast&lt;ComponentArray&lt;T&gt;&gt;(mComponentArrays[typeName]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="c:/users/thompson/comp-8551-project/ComponentManager.h"/>
  </compounddef>
</doxygen>
